{"name":"bugku刷到","slug":"bugku刷到","count":1,"postlist":[{"title":"文件包含","slug":"文件包含","date":"2021-01-16T02:15:37.000Z","updated":"2021-01-16T03:42:25.447Z","comments":true,"path":"api/articles/文件包含.json","excerpt":"","keywords":null,"cover":"images/bugku6.1.png","content":"<h1 id=\"文件包含漏洞\"><a href=\"#文件包含漏洞\" class=\"headerlink\" title=\"文件包含漏洞\"></a>文件包含漏洞</h1><p>刚起步，遇到两个 文件包含 的题目<br>先附上CSDN看到的关于文件包含的讲解<a href=\"https://blog.csdn.net/qq_37133717/article/details/94631028\">https://blog.csdn.net/qq_37133717/article/details/94631028</a>    </p>\n<h2 id=\"6-文件包含-本地包含\"><a href=\"#6-文件包含-本地包含\" class=\"headerlink\" title=\"6.文件包含-本地包含\"></a>6.文件包含-本地包含</h2><p>CSDN大佬讲解：<a href=\"https://blog.csdn.net/qq_39431542/article/details/88628225\">本地文件包含漏洞详解</a><br>第二行可知，flag在flag.php里，倒数第二行show_source(<strong>FILE</strong>)很明显的提示<br>$_REQUEST[]支持get、post两种方式发送过来的请求，很明显接收了hello参数的值，<br>var_dump()函数 显示关于一个或多个表达式的结构信息，包括表达式的类型与值；数组将递归展开值，通过缩进显示其结构<br>eval()函数把字符串按照 PHP 代码来计算。该字符串必须是合法的 PHP 代码，且必须以分号结尾。<br>show_source() 函数对文件进行语法显示,是 highlight_file() 的别名</p>\n<blockquote>\n<p>本题代码如下<br><img src=\"images/bugku6.1.png\" alt=\"6.1\">   </p>\n<ul>\n<li>可直接将flag.php文件读入变量hello中<br>url输入?hello=file(‘flag.php’)<br><img src=\"images/bugku6.2.png\" alt=\"6.2\">     </li>\n<li>eval存在命令执行漏洞，使用hello构造payload<br><code>index.php?hello=1);show_source(%27flag.php%27);var_dump(3</code><br><img src=\"images/bugku6.3.png\" alt=\"6.3\">    </li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"12-文件包含漏洞\"><a href=\"#12-文件包含漏洞\" class=\"headerlink\" title=\"12.文件包含漏洞\"></a>12.文件包含漏洞</h2><blockquote>\n<p><img src=\"images/bugku12.0.png\" alt=\"12.0\"><br>点<br><img src=\"images/bugku12.1.png\" alt=\"12.1\"><br>观察url : “<a href=\"http://114.67.246.176:16465/index.php?file=show.php&quot;%EF%BC%8C%E7%9C%8B%E5%88%B0file%EF%BC%8C%E6%98%8E%E7%99%BD%E8%BF%99%E5%8F%88%E6%98%AF%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E9%A2%98%E7%9B%AE%EF%BC%8C%E8%81%94%E6%83%B3%E5%88%B0\">http://114.67.246.176:16465/index.php?file=show.php&quot;，看到file，明白这又是文件包含的题目，联想到</a><u>读取index文件，但是直接读取index无法查看，所以就应该考虑用base64方法读取，构造url</u>.<br>构造url=“<a href=\"http://your/\">http://your</a> test ip/index.php?file=php://filter/read=convert.base64-encode/resource=index.php” , 网页返回base64。  </p>\n<ul>\n<li>php://是一种协议名称，php://filter/是一种访问本地文件的协议，/read=convert.base64-encode/表示读取的方式是base64编码后，resource=index.php表示目标文件为index.php。  </li>\n</ul>\n</blockquote>\n<hr>\n","text":"文件包含漏洞刚起步，遇到两个 文件包含 的题目<br>先附上CSDN看到的关于文件包含的讲解https://blog.csdn.net/qq_37133717/article/details/94631028    6.文件包含-本地包含CSDN大佬讲解：本地文件包含漏洞详解<b","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"bugku刷到","slug":"bugku刷到","count":1,"path":"api/tags/bugku刷到.json"}]}]}