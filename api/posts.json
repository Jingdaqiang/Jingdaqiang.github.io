{"total":6,"pageSize":10,"pageCount":1,"data":[{"title":"web常识","slug":"http协议","date":"2021-01-13T09:11:31.000Z","updated":"2021-01-14T05:20:18.984Z","comments":true,"path":"api/articles/http协议.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2>","text":"","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"CSDN","slug":"CSDN","count":1,"path":"api/tags/CSDN.json"}]},{"title":"PHP学习笔记","slug":"学习计划","date":"2021-01-12T06:48:37.000Z","updated":"2021-01-14T13:05:29.351Z","comments":true,"path":"api/articles/学习计划.json","excerpt":"","keywords":null,"cover":"images/php1.0.png","content":"<h2 id=\"下午搞一搞PHP\"><a href=\"#下午搞一搞PHP\" class=\"headerlink\" title=\"下午搞一搞PHP\"></a>下午搞一搞PHP</h2><hr>\n<h1 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h1><ul>\n<li>在 PHP 中，所有用户定义的函数、类和关键词（例如 if、else、echo 等等）都对大小写不敏感。<u>所有变量都对大小写敏感</u>  </li>\n<li>var_dump() 会返回变量的数据类型和值    <h3 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h3></li>\n<li>str_word_count() 函数对字符串中的单词进行计数  </li>\n<li>strrev() 函数反转字符串</li>\n<li>strpos() 函数用于检索字符串内指定的字符或文本<br>如果找到匹配，则会返回首个匹配的<u>字符位置</u>。如果未找到匹配，则将返回 FALSE。下例检索字符串 “Hello world!” 中的文本 “world”：<br><img src=\"images/php1.0.png\" alt=\"php1.0\"></li>\n<li>str_replace() 函数用一些字符串替换字符串中的另一些字符<br><img src=\"images/php1.2.png\" alt=\"php1.2\"></li>\n</ul>\n","text":"下午搞一搞PHPphp在 PHP 中，所有用户定义的函数、类和关键词（例如 if、else、echo 等等）都对大小写不敏感。所有变量都对大小写敏感  var_dump() 会返回变量的数据类型和值    字符串函数str_word_count() 函数对字符串中的单词进行计数 ","link":"","raw":null,"photos":[],"categories":[{"name":"web security","slug":"web-security","count":1,"path":"api/categories/web-security.json"},{"name":"做一顶白帽子","slug":"web-security/做一顶白帽子","count":1,"path":"api/categories/web-security/做一顶白帽子.json"}],"tags":[{"name":"w3school","slug":"w3school","count":1,"path":"api/tags/w3school.json"}]},{"title":"bugku-wp","slug":"bugku-wp","date":"2021-01-12T02:58:03.000Z","updated":"2021-01-14T13:03:15.031Z","comments":true,"path":"api/articles/bugku-wp.json","excerpt":"","keywords":null,"cover":"images/bugku1.1.png","content":"<hr>\n<h2 id=\"1-Url传参-get\"><a href=\"#1-Url传参-get\" class=\"headerlink\" title=\"1.Url传参-get\"></a>1.Url传参-get</h2><blockquote>\n<p>点开链接，出现代码<br><img src=\"images/bugku1.1.png\" alt=\"1.1\"><br>该题考查url传参中的get传参，读代码：如果get参数what的值等于flag则输出flag。（$_GET 传参时请求的参数是在URL中，直接在URL中赋值what变量，找到flag）   在url行输入?what=flag得<br><img src=\"images/bugku1.2.png\" alt=\"1.2\"> </p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"2-Url传参-post\"><a href=\"#2-Url传参-post\" class=\"headerlink\" title=\"2.Url传参-post\"></a>2.Url传参-post</h2><blockquote>\n<p>post传参需用到hackbar,在火狐firefox中打开链接<br>（$_POST 传参是在消息体中，可以借用hackbar插件添加post请求 ）<br><img src=\"images/bugku2.1.png\" alt=\"2.1\"><br>译为：如果post参数what的值等于flag则输出flag.<br>具体方法如下<br><img src=\"images/bugku2.2.png\" alt=\"2.2\">   </p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"3-php弱类型比较-矛盾\"><a href=\"#3-php弱类型比较-矛盾\" class=\"headerlink\" title=\"3.php弱类型比较-矛盾\"></a>3.php弱类型比较-矛盾</h2><blockquote>\n<p>读代码：同时满足get参数num值不为数字，且num==1，得flag,   考察php弱类型比较：php==符号不能判断类型，<u>在数字与字符串比较时会将字符串转化为数字进行比较</u>，可绕过得到flag，<br>则使num=1a可满足条件<br>在url栏输入？num=1a得flag<br><img src=\"images/bugku3.png\" alt=\"3\">  </p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"4-来找我吧\"><a href=\"#4-来找我吧\" class=\"headerlink\" title=\"4.来找我吧\"></a>4.来找我吧</h2><blockquote>\n<p>两个循环出现的赖皮窗口，firefox打开链接，F12查看 源码<br><img src=\"images/bugku4.1.png\" alt=\"4.1\"><br>调试器最下面发现html编码，利用Unicode转码工具，转码得flag<br><img src=\"images/bugku4.2.png\" alt=\"4.2\"></p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"5-你必须让他停下\"><a href=\"#5-你必须让他停下\" class=\"headerlink\" title=\"5.你必须让他停下\"></a>5.你必须让他停下</h2><blockquote>\n<p><img src=\"images/bugku5.1.png\" alt=\"5.1\"><br>网页一直在跳,flag在藏图片源码里    </p>\n<blockquote>\n<p>方法1.F12查源代码，刷新几次得flag<br><img src=\"images/bugku5.2.png\" alt=\"5.2\"><br>方法2.burp suite抓包<br>打开代理服务器（关掉外网）<br>抓包放放放放包<br><img src=\"images/bugku5.3.png\" alt=\"5.3\"><br><img src=\"images/bugku5.4.png\" alt=\"5.4\"></p>\n</blockquote>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"6-文件包含\"><a href=\"#6-文件包含\" class=\"headerlink\" title=\"6.文件包含\"></a>6.文件包含</h2><p>CSDN大佬讲解：<a href=\"https://blog.csdn.net/qq_39431542/article/details/88628225\">本地文件包含漏洞详解</a><br>第二行可知，flag在flag.php里，倒数第二行show_source(<strong>FILE</strong>)很明显的提示<br>$_REQUEST[]支持get、post两种方式发送过来的请求，很明显接收了hello参数的值，<br>var_dump()函数 显示关于一个或多个表达式的结构信息，包括表达式的类型与值；数组将递归展开值，通过缩进显示其结构<br>eval()函数把字符串按照 PHP 代码来计算。该字符串必须是合法的 PHP 代码，且必须以分号结尾。<br>show_source() 函数对文件进行语法显示,是 highlight_file() 的别名</p>\n<blockquote>\n<p>本题代码如下<br><img src=\"images/bugku6.1.png\" alt=\"6.1\">   </p>\n<ul>\n<li>可直接将flag.php文件读入变量hello中<br>url输入?hello=file(‘flag.php’)<br><img src=\"images/bugku6.2.png\" alt=\"6.2\">     </li>\n<li>eval存在命令执行漏洞，使用hello构造payload<br><code>index.php?hello=1);show_source(%27flag.php%27);var_dump(3</code><br><img src=\"images/bugku6.3.png\" alt=\"6.3\">    </li>\n</ul>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"7-全局变量\"><a href=\"#7-全局变量\" class=\"headerlink\" title=\"7.全局变量\"></a>7.全局变量</h2><blockquote>\n<p><img src=\"images/bugku7.1.png\" alt=\"7.1\"><br>代码提示flag在变量中，变量为args<br>直接搜索args的全局变量<br><img src=\"images/bugku7.2.png\" alt=\"7.2\">  </p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"8-头等舱\"><a href=\"#8-头等舱\" class=\"headerlink\" title=\"8.头等舱\"></a>8.头等舱</h2><blockquote>\n<p>什么都没有，根据题目提示可知要查看消息头<br>打开开发者工具，network(网络)<br><img src=\"images/bugku8.0.png\" alt=\"8.0\">  </p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"9-后门\"><a href=\"#9-后门\" class=\"headerlink\" title=\"9.后门\"></a>9.后门</h2><blockquote>\n<p><img src=\"images/bugku9.0.png\" alt=\"9.0\"><br>点开链接看到一个很拉风的页面<br><img src=\"images/bugku9.1.png\" alt=\"9.1\"><br>根据提示，可能会有后门，所以直接用恐怖如斯的御剑扫描其后台。<br>输入域名，选中字典们，开始扫描<br><img src=\"images/bugku9.2.png\" alt=\"9.2\"><br>扫出两个路径，URL栏输入index.php没反应<br>输入shell.php出现后台<br><img src=\"images/bugku9.3.png\" alt=\"9.3\"><br>用burp suite爆破密码</p>\n<ul>\n<li>关掉VPN，打开代理服务器(注意burpsuite与代理服务器端口一致为8080)，打开burp suite。  </li>\n<li>在shell.php网页密码处随便填（如123），burpsuite有响应<br><img src=\"images/bugku9.4.png\" alt=\"9.4\"><br>词典选password,  开始爆破start attack<br><img src=\"images/bugku9.5.png\" alt=\"9.5\"><br>爆出密码为hack   </li>\n<li>关掉burpsuite,打开VPN,刷新页面，输入密码hack，得到flag.</li>\n</ul>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"10-本地管理员\"><a href=\"#10-本地管理员\" class=\"headerlink\" title=\"10.本地管理员\"></a>10.本地管理员</h2><blockquote>\n<p><img src=\"images/bugku10.0.png\" alt=\"10.0\"><br>查看源代码发现：“IP禁止访问，请联系本地管理员登陆，IP已被记录.”，<br><img src=\"images/bugku10.1.png\" alt=\"10.1\"><br>且在一串nnnnn后面发现一段base64加密编码!– dGVzdDEyMw== –，在浏览器搜索可得base64解码为：test123（盲猜用户名为admin，密码为test123）<em>其实是我懒得爆破了</em><br>IP禁止访问，需伪造本地IP，伪装成本地管理员进行登录:<br>用burpsuite抓包，修改报文IP：<br>关VPN，改代理服务器端口与burpsuite一致。在网站中输入用户名密码，确定，burpsuite响应<br><img src=\"images/bugku10.2.png\" alt=\"10.2\"><br>http报文添加X-Forwarded-For: 127.0.0.1伪造IP<br>放包send得flag<br><img src=\"images/bugku10.3.png\" alt=\"10.3\">   </p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"11-查看源代码\"><a href=\"#11-查看源代码\" class=\"headerlink\" title=\"11.查看源代码\"></a>11.查看源代码</h2><blockquote>\n<p>进网页，查看源代码，发现几段url编码<br><img src=\"images/bugku11.0.png\" alt=\"11.0\"><br>先解码 再拼接，提交得flag  </p>\n</blockquote>\n<hr>\n<p>+<br>+<br>+</p>\n<h2 id=\"12-文件包含漏洞\"><a href=\"#12-文件包含漏洞\" class=\"headerlink\" title=\"12.文件包含漏洞\"></a>12.文件包含漏洞</h2><blockquote>\n<p><img src=\"images/bugku12.0.png\" alt=\"12.0\"><br>点<br><img src=\"images/bugku12.1.png\" alt=\"12.1\"><br>观察url : “<a href=\"http://114.67.246.176:16465/index.php?file=show.php&quot;%EF%BC%8C%E7%9C%8B%E5%88%B0file%EF%BC%8C%E6%98%8E%E7%99%BD%E8%BF%99%E5%8F%88%E6%98%AF%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E9%A2%98%E7%9B%AE%EF%BC%8C%E8%81%94%E6%83%B3%E5%88%B0\">http://114.67.246.176:16465/index.php?file=show.php&quot;，看到file，明白这又是文件包含的题目，联想到</a><u>读取index文件，但是直接读取index无法查看，所以就应该考虑用base64方法读取，构造url</u>.<br>构造url=“<a href=\"http://your/\">http://your</a> test ip/index.php?file=php://filter/read=convert.base64-encode/resource=index.php” , 网页返回base64。  </p>\n<ul>\n<li>php://是一种协议名称，php://filter/是一种访问本地文件的协议，/read=convert.base64-encode/表示读取的方式是base64编码后，resource=index.php表示目标文件为index.php。  </li>\n</ul>\n</blockquote>\n","text":"1.Url传参-get点开链接，出现代码<br> [Figure] 构造url=“http://your test ip/index.php?file=php://filter/read=convert.base64-encode/resource=index.php” , 网页","link":"","raw":null,"photos":[],"categories":[{"name":"ctf","slug":"ctf","count":2,"path":"api/categories/ctf.json"},{"name":"web security","slug":"ctf/web-security","count":2,"path":"api/categories/ctf/web-security.json"},{"name":"bugku","slug":"ctf/web-security/bugku","count":1,"path":"api/categories/ctf/web-security/bugku.json"}],"tags":[{"name":"Write up","slug":"Write-up","count":1,"path":"api/tags/Write-up.json"}]},{"title":"bugku前","slug":"疯狂的大强","date":"2021-01-11T13:51:56.000Z","updated":"2021-01-11T15:07:15.843Z","comments":true,"path":"api/articles/疯狂的大强.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"寒假-day-1\"><a href=\"#寒假-day-1\" class=\"headerlink\" title=\"寒假 day 1\"></a>寒假 day 1</h2><p>家人们，大强正儿八经写的第一篇博客。激动的心，颤抖的手。<br>寒假第一天，在家也是做了不少事情，德才兼备的大强没少做家务，但其实最主要做的事情还是修改博客，学习怎样写博客，换域名。多亏了肖儿，让我少走了不少弯路.以后就和jingdaqiang.top一起过了。<br>明天开始刷bugku.</p>\n","text":"寒假 day 1家人们，大强正儿八经写的第一篇博客。激动的心，颤抖的手。<br>寒假第一天，在家也是做了不少事情，德才兼备的大强没少做家务，但其实最主要做的事情还是修改博客，学习怎样写博客，换域名。多亏了肖儿，让我少走了不少弯路.以后就和jingdaqiang.top一起过了。<","link":"","raw":null,"photos":[],"categories":[{"name":"2021","slug":"2021","count":1,"path":"api/categories/2021.json"},{"name":"Daliy life","slug":"2021/Daliy-life","count":1,"path":"api/categories/2021/Daliy-life.json"},{"name":"疯狂的大强","slug":"2021/Daliy-life/疯狂的大强","count":1,"path":"api/categories/2021/Daliy-life/疯狂的大强.json"}],"tags":[{"name":"写个日记","slug":"写个日记","count":1,"path":"api/tags/写个日记.json"}]},{"title":"菜鸟","slug":"first","date":"2021-01-11T06:34:59.450Z","updated":"2021-01-11T13:47:57.685Z","comments":true,"path":"api/articles/first.json","excerpt":"<h2 id=\"比较水\"><a href=\"#比较水\" class=\"headerlink\" title=\"比较水\"></a>比较水</h2><p>拙劣的模仿</p>","keywords":null,"cover":"images/tu1.0.jpg","content":null,"text":"比较水拙劣的模仿 [Figure] 改的要全面","link":"","raw":null,"photos":[],"categories":[{"name":"ctf","slug":"ctf","count":2,"path":"api/categories/ctf.json"},{"name":"web security","slug":"ctf/web-security","count":2,"path":"api/categories/ctf/web-security.json"},{"name":"Write Up","slug":"ctf/web-security/Write-Up","count":1,"path":"api/categories/ctf/web-security/Write-Up.json"}],"tags":[{"name":"小白","slug":"小白","count":1,"path":"api/tags/小白.json"}]},{"title":"second","slug":"second","date":"2020-12-24T04:12:58.000Z","updated":"2020-12-30T14:18:02.000Z","comments":true,"path":"api/articles/second.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"second\"><a href=\"#second\" class=\"headerlink\" title=\"second\"></a>second</h3>","text":"second","link":"","raw":null,"photos":[],"categories":[{"name":"hello","slug":"hello","count":1,"path":"api/categories/hello.json"},{"name":"world","slug":"hello/world","count":1,"path":"api/categories/hello/world.json"}],"tags":[{"name":"first","slug":"first","count":1,"path":"api/tags/first.json"}]}]}